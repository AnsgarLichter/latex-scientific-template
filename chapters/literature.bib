% This file was created with Citavi 6.14.0.0

@proceedings{.2020,
 year = {2020},
 title = {{2020 International Conference on Intelligent Computing and Human-Computer Interaction (ICHCI)}},
 publisher = {IEEE},
 isbn = {978-1-6654-2316-8}
}


@misc{OpenJSFoundation.2022,
 editor = {{OpenJS Foundation}},
 year = {2022},
 title = {{An introduction to the NPM package manager}},
 url = {https://nodejs.org/en/learn/getting-started/an-introduction-to-the-npm-package-manager},
 urldate = {24.11.2023}
}


@misc{OpenJSFoundation.2022b,
 editor = {{OpenJS Foundation}},
 year = {2022},
 title = {{Introduction to Node.js}},
 url = {https://nodejs.org/en/learn/getting-started/introduction-to-nodejs},
 urldate = {24.11.2023}
}


@misc{OpenJSFoundation.2022c,
 editor = {{OpenJS Foundation}},
 year = {2022},
 title = {{Learn Node.js{\circledR}}},
 url = {https://nodejs.dev/en/learn/},
 urldate = {24.11.2023}
}


@misc{OpenJSFoundation.2022d,
 editor = {{OpenJS Foundation}},
 year = {2022},
 title = {{Node.js with TypeScript}},
 url = {https://nodejs.org/en/learn/getting-started/nodejs-with-typescript},
 urldate = {25.11.2023}
}


@misc{OpenJSFoundation.2022e,
 editor = {{OpenJS Foundation}},
 year = {2022},
 title = {{The V8 JavaScript Engine}},
 url = {https://nodejs.org/en/learn/getting-started/the-v8-javascript-engine},
 urldate = {25.11.2023}
}


@misc{OpenJSFoundation.2023,
 author = {{OpenJS Foundation}},
 year = {2023},
 title = {{Node.js 20 ChangeLog}},
 url = {https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V20.md},
 urldate = {24.11.2023}
}


@misc{OpenJSFoundation.2023b,
 author = {{OpenJS Foundation}},
 year = {2023},
 title = {{Node.js 21 ChangeLog}},
 url = {https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V21.md#21.0.0},
 urldate = {24.11.2023}
}


@misc{OvenSh.2022,
 author = {Oven-Sh},
 year = {2022},
 title = {{Why zig}},
 url = {https://github.com/oven-sh/bun/discussions/994},
 urldate = {24.11.2023}
}


@misc{OvenSh.2023,
 author = {Oven-Sh},
 year = {2023},
 title = {{Add a trusted dependency with Bun}},
 url = {https://bun.sh/guides/install/trusted},
 urldate = {24.11.2023}
}


@misc{OvenSh.2023b,
 editor = {Oven-Sh},
 year = {2023},
 title = {{Bun is a fast JavaScript all-in-one toolkit}},
 url = {https://bun.sh/},
 urldate = {24.11.2023}
}


@misc{OvenSh.2023c,
 editor = {Oven-Sh},
 year = {2023},
 title = {{Node.js compatibility}},
 url = {https://bun.sh/docs/runtime/nodejs-apis},
 urldate = {24.11.2023}
}


@misc{OvenSh.2023d,
 editor = {Oven-Sh},
 year = {2023},
 title = {{Offizielle Dokumentation}},
 url = {https://bun.sh/docs},
 urldate = {24.11.2023}
}


@misc{OvenSh.2023e,
 editor = {Oven-Sh},
 year = {2023},
 title = {{TypeScript}},
 url = {https://bun.sh/docs/typescript},
 urldate = {24.11.2023}
}


@misc{Postek.2023,
 author = {Postek, Krystian},
 year = {2023},
 title = {{Unable to build NestJS based project}},
 url = {https://github.com/oven-sh/bun/issues/4803},
 urldate = {24.11.2023}
}


@misc{QSuccess.2023,
 editor = {Q-Success},
 year = {2023},
 title = {{Usage statistics of JavaScript for websites}},
 url = {https://w3techs.com/technologies/details/pl-js},
 urldate = {24.11.2023}
}


@inproceedings{Silva.2020,
 abstract = {Function-as-service (FaaS) platforms promise a simpler programming model for cloud computing, in which the developers concentrate on writing its applications. In contrast, platform providers take care of resource management and administration. As FaaS users are billed based on the execution of the functions, platform providers have a natural incentive not to keep idle resources running at the platform's expense. However, this strategy may lead to the cold start issue, in which the execution of a function is delayed because there is no ready resource to host the execution. Cold starts can take hundreds of milliseconds to seconds and have been a prohibitive and painful disadvantage for some applications. This work describes and evaluates a technique to start functions, which restores snapshots from previously executed function processes. We developed a prototype of this technique based on the CRIU process checkpoint/restore Linux tool. We evaluate this prototype by running experiments that compare its start-up time against the standard Unix process creation/start-up procedure. We analyze the following three functions: i) a {\textquotedbl}do-nothing{\textquotedbl} function, ii) an Image Resizer function, and iii) a function that renders Markdown files. The results attained indicate that the technique can improve the start-up time of function replicas by 40{\%} (in the worst case of a {\textquotedbl}do-nothing{\textquotedbl} function) and up to 71{\%} for the Image Resizer one. Further analysis indicates that the runtime initialization is a key factor, and we confirmed it by performing a sensitivity analysis based on synthetically generated functions of different code sizes. These experiments demonstrate that it is critical to decide when to create a snapshot of a function. When one creates the snapshots of warm functions, the speed-up achieved by the prebaking technique is even higher: the speed-up increases from 127.45{\%} to 403.96{\%}, for a small, synthetic function; and for a bigger, synthetic function, this ratio increases from 121.07{\%} to 1932.49{\%}.},
 author = {Silva, Paulo and Fireman, Daniel and Pereira, Thiago Emmanuel},
 title = {{Prebaking Functions to Warm the Serverless Cold Start}},
 keywords = {cloud;faas;performance evaluation;serverless},
 pages = {1--13},
 publisher = {{Association for Computing Machinery}},
 isbn = {9781450381536},
 series = {{Middleware '20}},
 booktitle = {{Proceedings of the 21st International Middleware Conference}},
 year = {2020},
 address = {New York, NY, USA},
 doi = {10.1145/3423211.3425682}
}


@inproceedings{Silva.2020b,
 abstract = {Function-as-service (FaaS) platforms promise a simpler programming model for cloud computing, in which the developers concentrate on writing its applications. In contrast, platform providers take care of resource management and administration. As FaaS users are billed based on the execution of the functions, platform providers have a natural incentive not to keep idle resources running at the platform's expense. However, this strategy may lead to the cold start issue, in which the execution of a function is delayed because there is no ready resource to host the execution. Cold starts can take hundreds of milliseconds to seconds and have been a prohibitive and painful disadvantage for some applications. This work describes and evaluates a technique to start functions, which restores snapshots from previously executed function processes. We developed a prototype of this technique based on the CRIU process checkpoint/restore Linux tool. We evaluate this prototype by running experiments that compare its start-up time against the standard Unix process creation/start-up procedure. We analyze the following three functions: i) a {\textquotedbl}do-nothing{\textquotedbl} function, ii) an Image Resizer function, and iii) a function that renders Markdown files. The results attained indicate that the technique can improve the start-up time of function replicas by 40{\%} (in the worst case of a {\textquotedbl}do-nothing{\textquotedbl} function) and up to 71{\%} for the Image Resizer one. Further analysis indicates that the runtime initialization is a key factor, and we confirmed it by performing a sensitivity analysis based on synthetically generated functions of different code sizes. These experiments demonstrate that it is critical to decide when to create a snapshot of a function. When one creates the snapshots of warm functions, the speed-up achieved by the prebaking technique is even higher: the speed-up increases from 127.45{\%} to 403.96{\%}, for a small, synthetic function; and for a bigger, synthetic function, this ratio increases from 121.07{\%} to 1932.49{\%}.},
 author = {Silva, Paulo and Fireman, Daniel and Pereira, Thiago Emmanuel},
 title = {{Prebaking Functions to Warm the Serverless Cold Start}},
 keywords = {cloud;faas;performance evaluation;serverless},
 pages = {1--13},
 publisher = {{Association for Computing Machinery}},
 isbn = {9781450381536},
 series = {{Middleware '20}},
 booktitle = {{Proceedings of the 21st International Middleware Conference}},
 year = {2020},
 address = {New York, NY, USA},
 doi = {10.1145/3423211.3425682}
}


@book{Springer.2022,
 author = {Springer, Sebastian},
 year = {2022},
 title = {{Node.js : das umfassende Handbuch}},
 url = {http://deposit.dnb.de/cgi-bin/dokserv?id=992e511c601d4a5f84179bebaa309635&prov=M&dok_var=1&dok_ext=htm},
 keywords = {Node.js / JavaScript},
 address = {Bonn},
 edition = {4., aktualisierte und erweiterte Auflage},
 publisher = {Rheinwerk},
 isbn = {9783836287654},
 series = {{Rheinwerk Computing}},
 institution = {{Rheinwerk Verlag}}
}


@misc{StackOverflow.2023,
 author = {{Stack Overflow}},
 year = {2023},
 title = {{Stack Overflow Developer Survey 2023}},
 url = {https://survey.stackoverflow.co/2023/#overview},
 urldate = {24.11.2023}
}


@misc{Sumner.2022,
 author = {Sumner, Jared},
 year = {2022},
 title = {{Bun's Roadmap}},
 url = {https://github.com/oven-sh/bun/issues/159},
 urldate = {24.11.2023}
}


@misc{Sumner.2023,
 author = {Sumner, Jared},
 year = {2023},
 title = {bcrypt async functions segfault},
 url = {https://github.com/oven-sh/bun/issues/3201},
 urldate = {24.11.2023}
}


@misc{Sumner.2023b,
 author = {Sumner, Jared},
 year = {2023},
 title = {{Bun v1.0.6}},
 url = {https://bun.sh/blog/bun-v1.0.6},
 urldate = {24.11.2023}
}


@misc{Sumner.2023c,
 author = {Sumner, Jared and {Partovi, Ashcon, McDonnel, Colin}},
 year = {2023},
 title = {{Bun 1.0}},
 url = {https://bun.sh/blog/bun-v1.0},
 urldate = {24.11.2023}
}


@misc{Sumner.2022b,
 author = {Sumner, Jarred},
 year = {2022},
 title = {{Support NestJS}},
 url = {https://github.com/oven-sh/bun/issues/1641},
 urldate = {15.11.2023}
}


@inproceedings{Sun.2018,
 author = {Sun, Haiyang and Bonetta, Daniele and Humer, Christian and Binder, Walter},
 title = {{Efficient dynamic analysis for Node.js}},
 pages = {196--206},
 publisher = {ACM},
 isbn = {9781450356442},
 editor = {Dubach, Christophe and Xue, Jingling},
 booktitle = {{Proceedings of the 27th International Conference on Compiler Construction}},
 year = {2018},
 address = {New York, NY, USA},
 doi = {10.1145/3178372.3179527}
}


@misc{TypeORM.,
 author = {TypeORM},
 title = {{TypeORM - Dokumentation}},
 url = {https://typeorm.io/#relations-in-esm-projects},
 urldate = {24.11.2023}
}


@misc{TypeORM.2021,
 author = {TypeORM},
 year = {2021},
 title = {{Changelog}},
 url = {https://github.com/typeorm/typeorm/blob/master/CHANGELOG.md#deprecations},
 urldate = {24.11.2023}
}


@misc{Tyson.2023,
 author = {Tyson, Matthew},
 year = {2023},
 title = {{Explore bun.js: The all-in-one JavaScript runtime}},
 url = {https://www.infoworld.com/article/3688330/explore-bunjs-the-all-in-one-javascript-runtime.html},
 publisher = {InfoWorld},
 journal = {{InfoWorld}}
}


@misc{Verhelst.2023,
 author = {Verhelst, Bert},
 year = {2023},
 title = {{Add note that windows binaries are not yet available}},
 url = {https://github.com/oven-sh/bun/pull/4780},
 urldate = {24.11.2023}
}


@misc{OpenJSFoundation.o.J.,
 author = {{OpenJS Foundation}},
 year = {o. J.},
 title = {{The Event Loop}},
 url = {https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick#what-is-the-event-loop},
 urldate = {24.11.2023}
}


@inproceedings{Yeole.2011,
 author = {Yeole, A. S. and Meshram, B. B.},
 title = {{Analysis of different technique for detection of SQL injection}},
 pages = {963},
 publisher = {ACM},
 isbn = {9781450304498},
 editor = {Mishra, B. K. and Sedamkar, R. R. and Bharadi, V. A.},
 booktitle = {{Proceedings of the International Conference {\&} Workshop on Emerging Trends in Technology 2011}},
 year = {2011},
 address = {New York},
 doi = {10.1145/1980022.1980229}
}


@misc{OpenJSFoundation.o.J.b,
 author = {{OpenJS Foundation}},
 year = {o. J.},
 title = {{Node.js  API reference documentation}},
 url = {https://nodejs.org/api/documentation.html},
 urldate = {24.11.2023}
}


@misc{OpenJSFoundation.o.J.c,
 editor = {{OpenJS Foundation}},
 year = {o. J.},
 title = {{C++ addons}},
 url = {https://nodejs.org/api/addons.html},
 urldate = {24.11.2023}
}


@proceedings{.2020b,
 year = {2020},
 title = {{Proceedings of the 21st International Middleware Conference}},
 address = {New York, NY, USA},
 publisher = {{Association for Computing Machinery}},
 isbn = {9781450381536},
 series = {{Middleware '20}}
}


@proceedings{.2020c,
 year = {2020},
 title = {{Proceedings of the 21st International Middleware Conference}},
 address = {New York, NY, USA},
 publisher = {{Association for Computing Machinery}},
 isbn = {9781450381536},
 series = {{Middleware '20}}
}


@misc{.2022,
 year = {2022},
 title = {{ISO/IEC 25010}},
 url = {https://iso25000.com/index.php/en/iso-25000-standards/iso-25010},
 urldate = {16.10.2023}
}


@book{Ackermann.2019,
 author = {Ackermann, Philip},
 year = {2019},
 title = {{Node.js : Rezepte und L{\"o}sungen}},
 url = {http://deposit.dnb.de/cgi-bin/dokserv?id=f3336358c733464fbb4c6da953e54720&prov=M&dok_var=1&dok_ext=htm ; https://www.gbv.de/dms/tib-ub-hannover/1665573430.pdf},
 keywords = {Node.js;Node.js / JavaScript},
 address = {Bonn},
 edition = {1. Auflage},
 publisher = {{Rheinwerk Verlag}},
 isbn = {9783836264532},
 series = {{Rheinwerk Computing}},
 institution = {{Rheinwerk Verlag}}
}


@misc{Apple.o.J.,
 editor = {Apple},
 year = {o. J.},
 title = {{WebKit}},
 url = {https://webkit.org/},
 urldate = {24.11.2023}
}


@misc{Apple.o.J.b,
 author = {Apple},
 year = {o.J.},
 title = {{WebKit Documentation - JavaScriptCore}},
 url = {https://docs.webkit.org/Deep%20Dive/JSC/JavaScriptCore.html},
 urldate = {24.11.2023}
}


@article{Barbacci.1995,
 author = {Barbacci, Mario and Klein, Mark and Longstaff, Thomas and Weinstock, Charles},
 year = {1995},
 title = {{Quality Attributes}},
 url = {https://www.researchgate.net/publication/242437986_Quality_Attributes},
 urldate = {24.11.2023}
}


@misc{BasaratAliSyed.2014,
 author = {{Basarat Ali Syed}},
 year = {2014},
 title = {{Beginning Node.js}},
 keywords = {Computer science / Computer Science / Computer science;Node.js},
 address = {[Berkeley, Calif.]},
 publisher = {Apress},
 isbn = {9781484201879},
 series = {{SpringerLink}},
 doi = {10.1007/978-1-4842-0187-9}
}


@book{Brown.2020,
 author = {Brown, Ethan},
 year = {2020},
 title = {{Web development with Node and Express: Leveraging the JavaScript stack}},
 address = {Sebastopol, CA},
 edition = {Second edition},
 publisher = {{O'Reilly Media, Inc}},
 isbn = {978-1-492-05351-4}
}


@book{Chhetri.2016,
 author = {Chhetri, Nimesh},
 year = {2016},
 title = {{A comparative analysis of node. js (server-side javascript)}},
 url = {https://repository.stcloudstate.edu/csit_etds/5/},
 file = {A comparative analysis of node 2016:Attachments/A comparative analysis of node 2016.pdf:application/pdf}
}


@misc{DelGobbo.2018,
 author = {{Del Gobbo}, Nicolas},
 year = {2018},
 title = {node.bcrypt.js},
 url = {https://github.com/kelektiv/node.bcrypt.js},
 urldate = {24.11.2023}
}


@proceedings{DiLucca.2010,
 year = {2010},
 title = {{WSE 2010: Proceedings}},
 address = {[Piscataway, NJ]},
 publisher = {IEEE},
 isbn = {978-1-4244-8637-3},
 editor = {{Di Lucca}, Giuseppe and Kienle, Holger}
}


@proceedings{Dubach.2018,
 year = {2018},
 title = {{Proceedings of the 27th International Conference on Compiler Construction}},
 address = {New York, NY, USA},
 publisher = {ACM},
 isbn = {9781450356442},
 editor = {Dubach, Christophe and Xue, Jingling},
 doi = {10.1145/3178372}
}


@misc{Fedoseev.2016,
 author = {Fedoseev, Maksim},
 year = {2016},
 title = {{Bombardier}},
 url = {https://github.com/codesenberg/bombardier},
 urldate = {24.11.2023}
}


@book{FrankZammetti.2020,
 author = {{Frank Zammetti}},
 year = {2020},
 title = {{Modern Full-Stack Development: Using TypeScript, React, Node.js, Webpack, and Docker}},
 url = {libgen.li/file.php?md5=6e45e486274523acce569f1f08a3b473},
 edition = {1st ed.},
 publisher = {Apress},
 isbn = {9781484257388}
}


@misc{FreeSoftwareFoundation.2018,
 author = {{Free Software Foundation}},
 year = {2018},
 title = {{GNU Time}},
 url = {https://www.gnu.org/software/time/},
 urldate = {24.11.2023}
}


@misc{Greif.2022,
 author = {Greif, Sacha and Burel, Eric},
 year = {2022},
 title = {{State of JavaScript 2022}},
 url = {https://2022.stateofjs.com/en-US/other-tools/},
 urldate = {24.11.2023}
}


@inproceedings{Hodovan.2010,
 author = {Hodov{\'a}n, R. and Herczeg, Z. and Kiss, A.},
 title = {{Regular expressions on the web}},
 pages = {29--32},
 publisher = {IEEE},
 isbn = {978-1-4244-8637-3},
 editor = {{Di Lucca}, Giuseppe and Kienle, Holger},
 booktitle = {{WSE 2010}},
 year = {2010},
 address = {[Piscataway, NJ]},
 doi = {10.1109/WSE.2010.5623572}
}


@inproceedings{Huang.2020,
 author = {Huang, Xiaoping},
 title = {{Research and Application of Node.js Core Technology}},
 pages = {1--4},
 publisher = {IEEE},
 isbn = {978-1-6654-2316-8},
 booktitle = {{2020 International Conference on Intelligent Computing and Human-Computer Interaction (ICHCI)}},
 year = {2020},
 doi = {10.1109/ICHCI51889.2020.00008}
}


@misc{IEEE.,
 title = {{IEEE Standard Glossary of Software Engineering Terminology}},
 address = {Piscataway, NJ, USA},
 publisher = {IEEE},
 author = {IEEE},
 doi = {10.1109/IEEESTD.1990.101064}
}


@misc{ISOIEC.,
 title = {{Systems and software engineering --- Systems and software Quality Requirements and Evaluation (SQuaRE) --- System and software quality models}},
 url = {https://www.iso.org/obp/ui/#iso:std:iso-iec:25010:ed-1:v1:en},
 urldate = {24.11.2023},
 number = {ISO/IEC 25010:2011},
 author = {{ISO / IEC}}
}


@misc{Kaneriya.2022,
 author = {Kaneriya, Tejas},
 year = {2022},
 title = {{What is node.js? where  when {\&} how to use it (with examples)}},
 url = {https://www.simform.com/blog/what-is-node-js/},
 journal = {{Simform}}
}


@misc{McDonnel.2023,
 author = {McDonnel, Colin},
 year = {2023},
 title = {{Bun v1.0.3}},
 url = {https://bun.sh/blog/bun-v1.0.3},
 urldate = {24.11.2023}
}


@book{Mead.2018,
 abstract = {A comprehensive, easy-to-follow guide to creating complete Node apps and understanding how to build, deploy, and test your own apps. About This Book Entirely project-based and practical Explains the {\textquotedbl}Why{\textquotedbl} of Node.js features, not just the {\textquotedbl}how{\textquotedbl}, providing you with a deep understanding and enabling you to easily apply concepts in your own applications Covers the full range of technologies around Node.js - NPM, version control with Git, and much more Who This Book Is For This book targets anyone looking to launch their own Node applications, switch careers, or freelance as a Node developer. You should have a basic understanding of JavaScript in order to follow this course. What You Will Learn Learn the fundamentals of Node Build apps that respond to user input Master working with servers Learn how to test and debug applications Deploy and update your apps in the real world Create responsive asynchronous web applications In Detail Learning Node.js Development is a practical, project-based book that provides you with all you need to get started as a Node.js developer. Node is a ubiquitous technology on the modern web, and an essential part of any web developers' toolkit. If you are looking to create real-world Node applications, or you want to switch careers or launch a side project to generate some extra income, then you're in the right place. This book has been written around a single goal--turning you into a professional Node developer capable of developing, testing, and deploying real-world production applications. Learning Node.js Development is built from the ground up around the latest version of Node.js (version 9.x.x). You'll be learning all the cutting-edge features available only in the latest software versions. This book cuts through the mass of information available around Node and delivers the essential skills that you need to become a Node developer. It takes you through creating complete apps and understanding how to build, deploy, and test your own Node apps. It maps out everything in a comprehensive, easy-to-follow package designed to get you up and running quickly. Style and approach This book is entirely project-based. From the very beginning you'll be programming every single app and completing various challenges designed to help test and reinforce what you've learned. There's no copying-and-pasting here. This book is about writing code and building projects. Downloading the example code for this book You can download the examp ...},
 author = {Mead, Andrew},
 year = {2018},
 title = {{Learning Node.js Development}},
 address = {[Place of publication not identified]},
 publisher = {{Packt Publishing}},
 isbn = {1788395549}
}


@misc{Microsoft.o.J.,
 author = {Microsoft},
 year = {o. J.},
 title = {{TypeScript is JavaScript with syntax for types.}},
 url = {https://www.typescriptlang.org/},
 urldate = {24.11.2023}
}


@misc{Microsoft.2023,
 editor = {Microsoft},
 year = {2023},
 title = {{TSConfig Reference}},
 url = {https://www.typescriptlang.org/tsconfig#experimentalDecorators},
 urldate = {24.11.2023}
}


@proceedings{Mishra.2011,
 year = {2011},
 title = {{Proceedings of the International Conference {\&} Workshop on Emerging Trends in Technology 2011}},
 address = {New York},
 publisher = {ACM},
 isbn = {9781450304498},
 editor = {Mishra, B. K. and Sedamkar, R. R. and Bharadi, V. A.},
 doi = {10.1145/1980022}
}


@misc{Mysliwiec.2023,
 author = {Mysliwiec, Kamil},
 year = {2023},
 title = {{Introduction}},
 url = {https://docs.nestjs.com/},
 urldate = {24.11.2023}
}


@misc{Node.js.2023,
 author = {Node.js},
 year = {2023},
 title = {{Maintaining Dependencies}},
 url = {https://github.com/nodejs/node/blob/main/doc/contributing/maintaining/maintaining-dependencies.md},
 urldate = {24.11.2023}
}


@misc{OpenJSFoundation.o.J.d,
 author = {{OpenJS Foundation}},
 year = {o. J.},
 title = {{Node.js}},
 url = {https://nodejs.org/en},
 urldate = {17.10.2023}
}


@misc{ZigSoftwareFoundation.o.J.,
 author = {{Zig Software Foundation}},
 year = {o. J.},
 title = {{Why Zig When There is Already C++, D, and Rust?}},
 url = {https://ziglang.org/learn/why_zig_rust_d_cpp/#a-package-manager-and-build-system-for-existing-projects},
 urldate = {24.11.2023}
}


